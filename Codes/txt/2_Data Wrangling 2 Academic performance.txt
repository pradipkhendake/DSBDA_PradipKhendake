'''
Data Wrangling II
Create an “Academic performance” dataset of students and perform the following operations using
Python.
1. Scan all variables for missing values and inconsistencies. If there are missing values and/or
inconsistencies, use any of the suitable techniques to deal with them.
2. Scan all numeric variables for outliers. If there are outliers, use any of the suitable
techniques to deal with them.
3. Apply data transformations on at least one of the variables. The purpose of this
transformation should be one of the following reasons: to change the scale for better
understanding of the variable, to convert a non-linear relation into a linear one, or to
decrease the skewness and convert the distribution into a normal distribution. '''
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from scipy import stats
df = pd.read_csv(r"D:\Sem 6\Practicals\DSBDA\Codes\2.csv") 
df

# Checking for missing values using isnull() 
df.isnull()

#To create a series for NaN values for specific columns
series = pd.isnull(df["math score"])#function return dataframe of Boolean values which are True for NaN values
df[series] 

#Checking for missing values using notnull() 
df.notnull()#function return dataframe of Boolean values which are False for NaN values
#To create a series for NaN values for specific columns
series = pd.isnull(df["math score"])
df[series] 

#See that there are also categorical values in the dataset, for this, you need to use Label Encoding or One Hot Encoding
from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
df['math score'] = le.fit_transform(df['math score'])
newdf=df
df 

# For replacing null values with NaN 
missing_values = ["Na", "na"] 
df = pd.read_csv(r"D:\Sem 6\Practicals\DSBDA\Codes\2.csv")
df

#filling missing values using mean, median and standard deviation of that column.
df = pd.read_csv(r"D:\Sem 6\Practicals\DSBDA\Codes\2.csv") 
df
df['math score'] = df['math score'].fillna(df['math score'].mean())
df

df['math score'] = df['math score'].fillna(df['math score'].median())
df
df['math score'] = df['math score'].fillna(df['math score'].std())
df

#replacing missing values in column with minimum/maximum number of that column
df = pd.read_csv(r"D:\Sem 6\Practicals\DSBDA\Codes\2.csv") 
df
df['math score'] = df['math score'].fillna(df['math score'].min()) 
df 
df['math score'] = df['math score'].fillna(df['math score'].max())

#Filling a null values using replace() method 
df.replace(to_replace = np.nan, value = -99)

#To drop rows with at least 1 null value
df = pd.read_csv(r"D:\Sem 6\Practicals\DSBDA\Codes\2.csv")
df
df.dropna()
# To Drop rows if all values in that row are missing 
df.dropna(how = 'all')
#To Drop columns with at least 1 null value.
df.dropna(axis = 1) 

# Detecting outliers using Boxplot
import pandas as pd 
import numpy as np 
import matplotlib.pyplot as plt
df = pd.read_csv(r"D:\Sem 6\Practicals\DSBDA\Codes\2.2.csv")
df
col = ['math score', 'reading score' , 'writing score','placement score'] 
df.boxplot(col)
plt.show()
print(np.where(df['math score']>90)) 
print(np.where(df['writing score']<30))

# Detecting outliers using Scatterplot
import pandas as pd 
import numpy as np 
import matplotlib.pyplot as plt
df = pd.read_csv(r"D:\Sem 6\Practicals\DSBDA\Codes\2.2.csv")
df
fig,ax = plt.subplots(figsize = (18,10)) 
ax.scatter(df['placement score'],df['placement offer count'])
plt.show() 

#Detecting outliers using Z-Score
import numpy as np 
from scipy import stats
z = np.abs(stats.zscore(df['math score'])) 
print(z) 
threshold = 0.18
sample_outliers = np.where(z <threshold)
sample_outliers 

# Plot histogram of 'math_score' (after outlier removal assumed)
import matplotlib.pyplot as plt 
df = pd.read_csv(r"D:\Sem 6\Practicals\DSBDA\Codes\2.2.csv")
df
df['math score'].plot(kind = 'hist')
df['log_math'] = np.log10(df['math score']) 
plt.show()
df['log_math'].plot(kind = 'hist')
plt.show()




